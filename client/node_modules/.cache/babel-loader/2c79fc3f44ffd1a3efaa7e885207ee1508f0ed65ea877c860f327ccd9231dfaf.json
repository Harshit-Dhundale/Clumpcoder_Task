{"ast":null,"code":"import axios from \"axios\";\nconst API_BASE_URL = process.env.REACT_APP_API_URL || \"http://localhost:5000/api\";\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\n\n// Request interceptor\napi.interceptors.request.use(config => {\n  console.log(`Making ${config.method.toUpperCase()} request to ${config.url}`);\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Response interceptor\napi.interceptors.response.use(response => {\n  return response;\n}, error => {\n  var _error$response;\n  console.error(\"API Error:\", ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n  return Promise.reject(error);\n});\nexport const categoryAPI = {\n  getAll: () => api.get(\"/categories\"),\n  create: data => api.post(\"/categories\", data)\n};\nexport const questionAPI = {\n  getAll: () => api.get(\"/questions\"),\n  create: data => api.post(\"/questions\", data)\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","interceptors","request","use","config","console","log","method","toUpperCase","url","error","Promise","reject","response","_error$response","data","message","categoryAPI","getAll","get","post","questionAPI"],"sources":["D:/Projects/Clumpcoder_Task/client/src/services/api.js"],"sourcesContent":["import axios from \"axios\"\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || \"http://localhost:5000/api\"\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    \"Content-Type\": \"application/json\",\n  },\n})\n\n// Request interceptor\napi.interceptors.request.use(\n  (config) => {\n    console.log(`Making ${config.method.toUpperCase()} request to ${config.url}`)\n    return config\n  },\n  (error) => {\n    return Promise.reject(error)\n  },\n)\n\n// Response interceptor\napi.interceptors.response.use(\n  (response) => {\n    return response\n  },\n  (error) => {\n    console.error(\"API Error:\", error.response?.data || error.message)\n    return Promise.reject(error)\n  },\n)\n\nexport const categoryAPI = {\n  getAll: () => api.get(\"/categories\"),\n  create: (data) => api.post(\"/categories\", data),\n}\n\nexport const questionAPI = {\n  getAll: () => api.get(\"/questions\"),\n  create: (data) => api.post(\"/questions\", data),\n}\n\nexport default api\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;AAEjF,MAAMC,GAAG,GAAGL,KAAK,CAACM,MAAM,CAAC;EACvBC,OAAO,EAAEN,YAAY;EACrBO,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EACVC,OAAO,CAACC,GAAG,CAAC,UAAUF,MAAM,CAACG,MAAM,CAACC,WAAW,CAAC,CAAC,eAAeJ,MAAM,CAACK,GAAG,EAAE,CAAC;EAC7E,OAAOL,MAAM;AACf,CAAC,EACAM,KAAK,IAAK;EACT,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAb,GAAG,CAACI,YAAY,CAACY,QAAQ,CAACV,GAAG,CAC1BU,QAAQ,IAAK;EACZ,OAAOA,QAAQ;AACjB,CAAC,EACAH,KAAK,IAAK;EAAA,IAAAI,eAAA;EACTT,OAAO,CAACK,KAAK,CAAC,YAAY,EAAE,EAAAI,eAAA,GAAAJ,KAAK,CAACG,QAAQ,cAAAC,eAAA,uBAAdA,eAAA,CAAgBC,IAAI,KAAIL,KAAK,CAACM,OAAO,CAAC;EAClE,OAAOL,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,OAAO,MAAMO,WAAW,GAAG;EACzBC,MAAM,EAAEA,CAAA,KAAMrB,GAAG,CAACsB,GAAG,CAAC,aAAa,CAAC;EACpCrB,MAAM,EAAGiB,IAAI,IAAKlB,GAAG,CAACuB,IAAI,CAAC,aAAa,EAAEL,IAAI;AAChD,CAAC;AAED,OAAO,MAAMM,WAAW,GAAG;EACzBH,MAAM,EAAEA,CAAA,KAAMrB,GAAG,CAACsB,GAAG,CAAC,YAAY,CAAC;EACnCrB,MAAM,EAAGiB,IAAI,IAAKlB,GAAG,CAACuB,IAAI,CAAC,YAAY,EAAEL,IAAI;AAC/C,CAAC;AAED,eAAelB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}