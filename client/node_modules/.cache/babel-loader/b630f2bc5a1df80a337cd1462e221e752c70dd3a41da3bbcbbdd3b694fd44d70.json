{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"D:\\\\Projects\\\\Clumpcoder_Task\\\\client\\\\src\\\\context\\\\AppContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppContext = /*#__PURE__*/createContext();\nconst initialState = {\n  categories: [],\n  questions: [],\n  loading: false,\n  error: null\n};\nconst appReducer = (state, action) => {\n  switch (action.type) {\n    case \"SET_LOADING\":\n      return {\n        ...state,\n        loading: action.payload\n      };\n    case \"SET_ERROR\":\n      return {\n        ...state,\n        error: action.payload,\n        loading: false\n      };\n    case \"SET_CATEGORIES\":\n      return {\n        ...state,\n        categories: action.payload,\n        loading: false\n      };\n    case \"ADD_CATEGORY\":\n      return {\n        ...state,\n        categories: [action.payload, ...state.categories],\n        loading: false\n      };\n    case \"SET_QUESTIONS\":\n      return {\n        ...state,\n        questions: action.payload,\n        loading: false\n      };\n    case \"ADD_QUESTION\":\n      return {\n        ...state,\n        questions: [action.payload, ...state.questions],\n        loading: false\n      };\n    case \"CLEAR_ERROR\":\n      return {\n        ...state,\n        error: null\n      };\n    default:\n      return state;\n  }\n};\nexport const AppProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(appReducer, initialState);\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      state,\n      dispatch\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 10\n  }, this);\n};\n_s(AppProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n_c = AppProvider;\nexport const useApp = () => {\n  _s2();\n  const context = useContext(AppContext);\n  if (!context) {\n    throw new Error(\"useApp must be used within an AppProvider\");\n  }\n  return context;\n};\n_s2(useApp, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","_s2","createContext","useContext","useReducer","jsxDEV","_jsxDEV","AppContext","initialState","categories","questions","loading","error","appReducer","state","action","type","payload","AppProvider","children","dispatch","Provider","value","fileName","lineNumber","columnNumber","_c","useApp","context","Error","$RefreshReg$"],"sources":["D:/Projects/Clumpcoder_Task/client/src/context/AppContext.js"],"sourcesContent":["\"use client\"\n\nimport { createContext, useContext, useReducer } from \"react\"\n\nconst AppContext = createContext()\n\nconst initialState = {\n  categories: [],\n  questions: [],\n  loading: false,\n  error: null,\n}\n\nconst appReducer = (state, action) => {\n  switch (action.type) {\n    case \"SET_LOADING\":\n      return { ...state, loading: action.payload }\n    case \"SET_ERROR\":\n      return { ...state, error: action.payload, loading: false }\n    case \"SET_CATEGORIES\":\n      return { ...state, categories: action.payload, loading: false }\n    case \"ADD_CATEGORY\":\n      return {\n        ...state,\n        categories: [action.payload, ...state.categories],\n        loading: false,\n      }\n    case \"SET_QUESTIONS\":\n      return { ...state, questions: action.payload, loading: false }\n    case \"ADD_QUESTION\":\n      return {\n        ...state,\n        questions: [action.payload, ...state.questions],\n        loading: false,\n      }\n    case \"CLEAR_ERROR\":\n      return { ...state, error: null }\n    default:\n      return state\n  }\n}\n\nexport const AppProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(appReducer, initialState)\n\n  return <AppContext.Provider value={{ state, dispatch }}>{children}</AppContext.Provider>\n}\n\nexport const useApp = () => {\n  const context = useContext(AppContext)\n  if (!context) {\n    throw new Error(\"useApp must be used within an AppProvider\")\n  }\n  return context\n}\n"],"mappings":"AAAA,YAAY;;AAAA,IAAAA,YAAA;EAAAC,EAAA,GAAAC,YAAA;EAAAC,GAAA,GAAAD,YAAA;AAEZ,SAASE,aAAa,EAAEC,UAAU,EAAEC,UAAU,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE7D,MAAMC,UAAU,gBAAGL,aAAa,CAAC,CAAC;AAElC,MAAMM,YAAY,GAAG;EACnBC,UAAU,EAAE,EAAE;EACdC,SAAS,EAAE,EAAE;EACbC,OAAO,EAAE,KAAK;EACdC,KAAK,EAAE;AACT,CAAC;AAED,MAAMC,UAAU,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EACpC,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,aAAa;MAChB,OAAO;QAAE,GAAGF,KAAK;QAAEH,OAAO,EAAEI,MAAM,CAACE;MAAQ,CAAC;IAC9C,KAAK,WAAW;MACd,OAAO;QAAE,GAAGH,KAAK;QAAEF,KAAK,EAAEG,MAAM,CAACE,OAAO;QAAEN,OAAO,EAAE;MAAM,CAAC;IAC5D,KAAK,gBAAgB;MACnB,OAAO;QAAE,GAAGG,KAAK;QAAEL,UAAU,EAAEM,MAAM,CAACE,OAAO;QAAEN,OAAO,EAAE;MAAM,CAAC;IACjE,KAAK,cAAc;MACjB,OAAO;QACL,GAAGG,KAAK;QACRL,UAAU,EAAE,CAACM,MAAM,CAACE,OAAO,EAAE,GAAGH,KAAK,CAACL,UAAU,CAAC;QACjDE,OAAO,EAAE;MACX,CAAC;IACH,KAAK,eAAe;MAClB,OAAO;QAAE,GAAGG,KAAK;QAAEJ,SAAS,EAAEK,MAAM,CAACE,OAAO;QAAEN,OAAO,EAAE;MAAM,CAAC;IAChE,KAAK,cAAc;MACjB,OAAO;QACL,GAAGG,KAAK;QACRJ,SAAS,EAAE,CAACK,MAAM,CAACE,OAAO,EAAE,GAAGH,KAAK,CAACJ,SAAS,CAAC;QAC/CC,OAAO,EAAE;MACX,CAAC;IACH,KAAK,aAAa;MAChB,OAAO;QAAE,GAAGG,KAAK;QAAEF,KAAK,EAAE;MAAK,CAAC;IAClC;MACE,OAAOE,KAAK;EAChB;AACF,CAAC;AAED,OAAO,MAAMI,WAAW,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAApB,EAAA;EAC3C,MAAM,CAACe,KAAK,EAAEM,QAAQ,CAAC,GAAGhB,UAAU,CAACS,UAAU,EAAEL,YAAY,CAAC;EAE9D,oBAAOF,OAAA,CAACC,UAAU,CAACc,QAAQ;IAACC,KAAK,EAAE;MAAER,KAAK;MAAEM;IAAS,CAAE;IAAAD,QAAA,EAAEA;EAAQ;IAAAI,QAAA,EAAAzB,YAAA;IAAA0B,UAAA;IAAAC,YAAA;EAAA,OAAsB,CAAC;AAC1F,CAAC;AAAA1B,EAAA,CAJYmB,WAAW;AAAAQ,EAAA,GAAXR,WAAW;AAMxB,OAAO,MAAMS,MAAM,GAAGA,CAAA,KAAM;EAAA1B,GAAA;EAC1B,MAAM2B,OAAO,GAAGzB,UAAU,CAACI,UAAU,CAAC;EACtC,IAAI,CAACqB,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,2CAA2C,CAAC;EAC9D;EACA,OAAOD,OAAO;AAChB,CAAC;AAAA3B,GAAA,CANY0B,MAAM;AAAA,IAAAD,EAAA;AAAAI,YAAA,CAAAJ,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}